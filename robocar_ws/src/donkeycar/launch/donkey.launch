<!-- 
export ROS_IP=192.168.0.51
export ROS_MASTER_URI=http://192.168.0.51:11311/

export ROS_IP=192.168.0.133
export ROS_MASTER_URI=http://192.168.0.51:11311/

 -->

<launch>
  <arg name="simulation" default="1" />

  <arg name="model" default="$(find donkeycar)/config/car.xacro"/>
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

<!-- Publish TF messages from URDF -->
  <node type="joint_state_publisher" pkg="joint_state_publisher" name="joint_state_publisher" output="screen">
    <!-- <param name="robot_description " value="$(arg robot_description)"/> -->
    <!-- default rate -->
    <!-- <param name="rate" value="10"/> -->
  </node>
  <node type="robot_state_publisher" pkg="robot_state_publisher" name="robot_state_publisher" output="screen">
    <!-- <param name="robot_description " value="$(arg robot_description)"/> -->
    <!-- default rate -->
    <!-- <param name="publish_frequency" value="50"/> -->
  </node>

  <!-- RUN ON THE CAR -->
  <group unless="$(arg simulation)">
    <!-- include camera launch file -->
    <include file="$(find donkeycar)/launch/camera.launch" />
    <!-- Steering and throttle of the donkeycar -->
    <rosparam command="load" file="$(find donkey_actuator)/config/servos.yaml" />
    <node name="donkey_actuator_node" pkg="donkey_actuator" type="donkey_actuator_node.py" output="screen"/>
  </group>


<!-- RUN ON PC WITHOUT CAR -->
  <group if="$(arg simulation)">
    <!-- load mock camera image and info publisher -->
    <node name="mock_camera" pkg="path_from_image" type="mock_camera.py" output="screen">
      <param name="image_topic" value="/raspicam/image/compressed"/>
      <param name="info_topic" value="/raspicam/camera_info"/>
    </node>
  </group>


    <!-- node to get transformation matrix -->
    <node name="trans_matrix_getter" pkg="path_from_image" type="trans_matrix_getter.py" output="screen">
      <param name="_camera_frame" value="camera_link_optical"/>
      <param name="_base_frame" value="base_footprint"/>
      <param name="distance_ahead" value="1.54"/>
      <param name="lane_width" value="2.05"/>
      <param name="matrix_topic" value="/path/transf_matrix"/>
      <param name="camera_info" value="/raspicam/camera_info"/>
    </node>
    <!-- test node that warps an image
    to get the right values for lane_width and distance_ahead -->
    <!-- <node name="image_warper" pkg="path_from_image" type="image_warper.py" output="screen">
      <param name="image_topic" value="/raspicam/image/compressed"/>
      <param name="warp_image" value="/path/warp_image/compressed"/>
      <param name="matrix_topic" value="/path/transf_matrix"/>
    </node> -->
    <!-- node to draw a lane area over an image -->
    <node name="lane_area_drawer" pkg="path_from_image" type="lane_area_drawer.py" output="screen">
      <param name="image_topic" value="/raspicam/image/compressed"/>
      <param name="info_topic" value="/raspicam/camera_info"/>
      <param name="lane_image" value="/path/lane_image/compressed"/>
      <param name="matrix_topic" value="/path/transf_matrix"/>
      <param name="img_waypoints" value="/path/img_waypoints"/>
    </node>

    <node name="path_publisher" pkg="path_from_image" type="path_publisher.py" output="screen">
      <param name="info_topic" value="/raspicam/camera_info"/>
      <param name="img_waypoints" value="/path/img_waypoints"/>
      <param name="path_waypoints" value="/path/path_waypoints"/>
      <param name="_camera_frame" value="camera_link_optical"/>
      <param name="_base_frame" value="base_footprint"/>
    </node>

  <node name="controller_node" pkg="controller" type="controller_node.py" output="screen">
      <param name="kp" value="4.0"/>
      <param name="ki" value="0.01"/>
      <param name="kd" value="0.0"/>
      <param name="velocity" value="0.5"/>
      <param name="path_waypoints" value="/path/path_waypoints"/>
  </node>
    <!-- launch RVIZ -->
    <!-- <arg name="rvizconfig" default="$(find donkeycar)/config/view.rviz" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" /> -->


  



</launch>
