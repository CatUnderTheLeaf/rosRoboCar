<!-- 
export ROS_IP=192.168.0.51
export ROS_MASTER_URI=http://192.168.0.51:11311/

export ROS_IP=192.168.0.133
export ROS_MASTER_URI=http://192.168.0.51:11311/

 -->

<launch>

<!-- RUN ON PC WITHOUT CAR -->
  
    
    
    <!-- <node name="republish" pkg="image_transport" type="republish" output="screen">
      <param name="image_topic" value="/raspicam/image/compressed"/>
      <param name="info_topic" value="/raspicam/camera_info"/>
    </node> -->
  
    <node pkg="rosbag" type="play" name="rosbag" required="true" args="$(find path_from_image)/bagfiles/subset5.bag"/>

    <!-- republish to image raw, if needed and rectify image -->
    <node name="republish_compressed_to_raw" pkg="image_transport" type="republish" args="compressed in:=/raspicam/image raw out:=/raspicam/image" />
    <!-- load mock camera image and info publisher -->
    <arg name="camera_info" default="$(find donkeycar)/config/camera_info.yaml" />
    <rosparam command="load" file="$(arg camera_info)" />
    <node name="republish_image_info" pkg="path_from_image" type="republish_image_info" output="screen"/>
    
   <group ns="camera">
    <node name="rectify_image_proc" pkg="image_proc" type="image_proc" output="screen">
      <param name="image_transport" value="raw"/>
      <remap from="image_raw" to="image" />
    </node>
    <node pkg="image_view" name="image_raw" type="image_view" output="screen">
    </node>
    <node pkg="image_view" name="image_rect" type="image_view" output="screen">
        <remap from="image" to="image_rect_color" />
    </node>
    
    
    </group>
    <!-- Steering and throttle of the donkeycar -->
    <!-- <rosparam command="load" file="$(find donkey_actuator)/config/servos.yaml" />    -->
    <!-- <node name="donkey_actuator_node" pkg="donkey_actuator" type="donkey_actuator_node.py" output="screen"/> -->
    
    <!-- include lane-keeping launch file -->
    <!-- <include file="$(find donkeycar)/launch/lanekeep.launch" /> -->


</launch>
